% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_occurrences.R, R/use_abundance.R,
%   R/use_locality.R, R/use_coordinates.R, R/use_datetime.R, R/use_sf.R,
%   R/use_collection.R, R/use_individual_traits.R, R/use_observer.R,
%   R/use_scientific_name.R, R/use_taxonomy.R, R/use_measurements.R,
%   R/check_terms.R
\name{check_occurrenceID}
\alias{check_occurrenceID}
\alias{check_occurrenceStatus}
\alias{check_individualCount}
\alias{check_organismQuantity}
\alias{check_organismQuantityType}
\alias{check_basisOfRecord}
\alias{check_continent}
\alias{check_country}
\alias{check_countryCode}
\alias{check_stateProvince}
\alias{check_locality}
\alias{check_decimalLatitude}
\alias{check_eventDate}
\alias{check_year}
\alias{check_month}
\alias{check_day}
\alias{check_eventTime}
\alias{check_coords}
\alias{check_is_sf}
\alias{check_is_point}
\alias{check_has_crs}
\alias{check_datasetName}
\alias{check_decimalLongitude}
\alias{check_geodeticDatum}
\alias{check_crs}
\alias{check_individualID}
\alias{check_lifeStage}
\alias{check_sex}
\alias{check_vitality}
\alias{check_reproductiveCondition}
\alias{check_recordedBy}
\alias{check_recordedByID}
\alias{check_scientificName}
\alias{check_scientificNameRank}
\alias{check_scientificNameAuthorship}
\alias{check_kingdom}
\alias{check_phylum}
\alias{check_class}
\alias{check_order}
\alias{check_family}
\alias{check_genus}
\alias{check_specificEpithet}
\alias{check_vernacularName}
\alias{check_measurementUnit}
\alias{check_terms}
\title{Check individual Darwin Core term columns are valid}
\usage{
check_occurrenceID(.df, level = c("inform", "warn", "abort"))

check_occurrenceStatus(.df, level = c("inform", "warn", "abort"))

check_individualCount(.df, level = c("inform", "warn", "abort"))

check_organismQuantity(.df, level = c("inform", "warn", "abort"))

check_organismQuantityType(.df, level = c("inform", "warn", "abort"))

check_basisOfRecord(.df, level = c("inform", "warn", "abort"))

check_continent(df, level = c("inform", "warn", "abort"))

check_country(df, level = c("inform", "warn", "abort"))

check_countryCode(df, level = c("inform", "warn", "abort"))

check_stateProvince(.df, level = c("inform", "warn", "abort"))

check_locality(.df, level = c("inform", "warn", "abort"))

check_decimalLatitude(.df, level = c("inform", "warn", "abort"))

check_eventDate(.df, level = c("inform", "warn", "abort"))

check_year(.df, level = c("inform", "warn", "abort"))

check_month(.df, level = c("inform", "warn", "abort"))

check_day(.df, level = c("inform", "warn", "abort"))

check_eventTime(.df, level = c("inform", "warn", "abort"))

check_coords(.df, level = c("inform", "warn", "abort"))

check_is_sf(.df, level = c("inform", "warn", "abort"), call = caller_env())

check_is_point(.df, level = c("inform", "warn", "abort"), call = caller_env())

check_has_crs(.df, level = c("inform", "warn", "abort"), call = caller_env())

check_datasetName(.df, level = c("inform", "warn", "abort"))

check_decimalLongitude(.df, level = c("inform", "warn", "abort"))

check_geodeticDatum(.df, level = c("inform", "warn", "abort"))

check_crs(.df, level = "warn", call = caller_env())

check_individualID(.df, level = c("inform", "warn", "abort"))

check_lifeStage(.df, level = c("inform", "warn", "abort"))

check_sex(.df, level = c("inform", "warn", "abort"))

check_vitality(.df, level = c("inform", "warn", "abort"))

check_reproductiveCondition(.df, level = c("inform", "warn", "abort"))

check_recordedBy(.df, level = c("inform", "warn", "abort"))

check_recordedByID(.df, level = c("inform", "warn", "abort"))

check_scientificName(.df, level = c("inform", "warn", "abort"))

check_scientificNameRank(.df, level = c("inform", "warn", "abort"))

check_scientificNameAuthorship(.df, level = c("inform", "warn", "abort"))

check_kingdom(.df, level = c("inform", "warn", "abort"))

check_phylum(.df, level = c("inform", "warn", "abort"))

check_class(.df, level = c("inform", "warn", "abort"))

check_order(.df, level = c("inform", "warn", "abort"))

check_family(.df, level = c("inform", "warn", "abort"))

check_genus(.df, level = c("inform", "warn", "abort"))

check_specificEpithet(.df, level = c("inform", "warn", "abort"))

check_vernacularName(.df, level = c("inform", "warn", "abort"))

check_measurementUnit(.df, level = c("inform", "warn", "abort"))
}
\arguments{
\item{.df}{description}

\item{level}{what action should the function take for non-conformance?
Defaults to \code{"inform"}.}
}
\description{
\code{check_} functions run validation checks on data in a specified Darwin Core
column. \code{check_} functions are run by the \code{use_} functions that contain the
respective term. Users are able to run these checks on individual columns
outside of \code{use_} functions if they desire.
}
