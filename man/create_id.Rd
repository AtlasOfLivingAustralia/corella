% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_id.R
\name{create_composite_id}
\alias{create_composite_id}
\alias{create_sequential_id}
\alias{create_random_id}
\title{Create identifier columns}
\usage{
create_composite_id(..., sep = "-")

create_sequential_id(width)

create_random_id()
}
\arguments{
\item{...}{Zero or more variable names from the tibble being
mutated (unquoted), and/or zero or more \code{create_} functions, separated by
commas.}

\item{sep}{Character used to separate field values. Defaults to \code{"-"}}

\item{width}{(Integer) how many characters should the resulting string be?
Defaults to one plus the order of magnitude of the largest number.}
}
\value{
An amended tibble, containing a field with the requested information.
}
\description{
Identifiers are columns that uniquely identify a single record within a
dataset. These are helper functions, designed to make it easier to
generate such columns from a given dataset. They are designed to be called
within \code{\link[=use_events]{use_events()}}, \code{\link[=use_occurrences]{use_occurrences()}}, or (equivalently)
\code{\link[dplyr:mutate]{dplyr::mutate()}}. Generally speaking, it is best practice to use existing
information from a dataset to generate identifiers; for this reason we
recomment using \code{create_composite_id()} to aggregate existing fields, if no
such composite is already present within the dataset. It is possible to call
\code{create_sequential_id()} or \code{create_random_id()} within
\code{create_composite_id()} to combine existing and new columns.
}
\examples{
library(tibble)
df <- tibble(eventDate = paste0(rep(c(2020:2024), 3), "-01-01"),
             basisOfRecord = "humanObservation",
             site = rep(c("A01", "A02", "A03"), each = 5))
df |>
    use_occurrences(occurrenceID = create_composite_id(create_sequential_id(),
                                                       site,
                                                       eventDate))
}
